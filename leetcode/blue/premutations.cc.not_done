#include <iostream>
#include <vector>
using namespace std;

vector<vector<int> > permute(vector<int> &num)
{
    vector<vector<int> > ret;
    if (num.size() == 0) return ret;
    if (num.size() == 1)
    {
        ret.push_back(num);
	return ret;
    }

    int start = num[0];
    num.erase(num.begin());
    cout <<"1"<<endl;
    ret = permute(num);

    cout <<"2"<<endl;
    vector<int> tmp;
    vector<vector<int> > ret2;

    for (int i = 0; i < ret.size(); i++)
    {
	    cout <<"3"<<endl;
        for (vector<int>::iterator it = ret[i].begin(); it < ret[i].end(); it++)
	{
            tmp = ret[i];
	    cout <<"15"<<endl;
	    tmp.insert(it, start);
	    cout <<"5"<<endl;
            ret2.push_back(tmp);
	    cout <<"6"<<endl;
	}
    }

	    cout <<"4"<<endl;
    return ret2;
}

void test()
{
    vector<int> num;
    num.push_back(1);
    num.push_back(2);
    num.push_back(3);

    vector<vector<int> > ret = permute(num);
    cout<<"call done"<<endl;
    for (int i = 0; i < ret.size(); i ++)
    {
        for (int j = 0; j < 3; j++)
	{
	    cout<<ret[i][j]<<endl;
	}
	cout<<endl;
    }
}

int main()
{
    test();
}
